@model SchoolManagement.Models.Enrollment

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<script>
    $(function () {
        console.log("Starting");
        $("#Student_FirstName").autocomplete({
            source: function (request, response) {
                $.ajax({
                    url: "/Enrollments/GetStudents",
                    dataType: "json",
                    type: "POST",
                    data: {
                        term: request.term
                    },
                    success: function (data) {
                        console.log(data);
                        response($.map(data, function (item) {
                            return { label: item.Name, value: item.Name, id: item.Id };
                        }));
                    }
                });
            },
            minLength: 2,
            select: function (event, query) {
                console.log(query);
                console.log("id: " + query.item.id);
                $("#StudentID").val(query.item.id);
            }
        });
    })

    function Added(res) {
        if (res.IsSuccess) {
            $(function () {
                $("#failed").fadeOut("fast");
                $("#success").fadeIn("fast");
                //$("#success").append(res.Message);
            })
        }
        else {
            Failed(res);
        }
    }

    function Failed(res) {
        $(function () {
            $("#success").fadeOut("fast");
            $("#failed").fadeIn("fast");
            //$("#success").append(res.Message);
        })
    }

    function Failure(res) {
        $(function () {
            $("#success").fadeOut("fast");
            $("#failed").fadeIn("fast");
            $("#failed").append(res.Message);
        })
    }
</script>

<h2>Create</h2>

@using (Ajax.BeginForm("AddStudent", "Enrollments", new AjaxOptions
{
    HttpMethod = "POST",
    OnSuccess = "Added",
    OnFailure = "Failure"
}))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Enrollment</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div id="failed" class="alert alert-danger" style="display: none;">
            There was an error adding the Student to this Course.
        </div>

        <div id="success" class="alert alert-success" style="display: none;">
            Student added successfully.
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CourseID, "CourseID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("CourseID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CourseID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StudentID, "StudentID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.DropDownList("StudentID", null, htmlAttributes: new { @class = "form-control" })*@
                @Html.EditorFor(model => model.Student.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.HiddenFor(model => model.StudentID)
                @Html.ValidationMessageFor(model => model.StudentID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
